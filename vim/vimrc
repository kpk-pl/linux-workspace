syntax on
syntax enable
filetype plugin indent on
"filetype plugin on

" Enable sourcing .vimrc from project directories
set exrc
set secure

" Mark linex exceeding column width
if exists('+colorcolumn')
    set colorcolumn=110
    highlight ColorColumn ctermbg=darkgray
endif

" TAB is 4 spaces, change existing
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" highlight search results
set hlsearch

nnoremap <F5> :buffers<CR>:buffer<Space>
nnoremap <F2> :UndotreeToggle<CR>
nnoremap <F3> :UndotreeFocus<CR>

set mouse=a
set number
set helplang=en
set history=50
"set cursorline

set t_Co=256
if &term =~ '256color'
  set t_ut=
endif

"CtrlP
set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn)$',
    \ 'file': '\v\.(exe|so|dll|bin)$',
    \ }

"NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

"NERDCommenter
let mapleader=","

"Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_cpp_compiler_options = ' -std=c++11 -stdlib=libc++'

"undotree
if has("persistent_undo")
    set undodir=~/.undodir/
    set undofile
endif
"Shop the panel on the right
let g:undotree_WindowLayout = 3 
let g:undotree_SetFocusWhenToggle = 1

"Now infect with plugins
let g:pathogen_disabled = []
execute pathogen#infect()

colorscheme valloric 
